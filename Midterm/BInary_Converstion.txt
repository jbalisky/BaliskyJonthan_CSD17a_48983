/**
 * .06640625 base 10 = .00010001 base 2 *2^-3
 * 0000-0011 -> invert 1111-1100 add 1 = 1111-1101
 * 0100-0100-0000-0000-0000-0000-1111-1101
 * 4    4    0    0    0    0     F    D == answer
 * 
 * 0.25 = 0.01 = 0.1*2^-1
 * e.g. 2.25 base 10 = 10.01 base 2 -> 0.1001 * 2^2 = 10.01
 * 32 bits
 * 1 sign bits at the beginning
 * 8 bits for power at the end (1 sign bit)
 * 23 bits for fraction
 * 0.xxxxx
 * 0100-1000-0000-0000-0000-0000-0000-0010
 * 4 8 0 0 0 0 0 2
 * -
 * -2.125 = base 10 = -10.001 base 2 -> .10001 * 2^2 = 
 * 0100-0100-0000-0000-0000-0000-0000-0010 = 2.125
 * 1011-1011-1111-1111-1111-1111-0000-0010      //change to negative 0->1, 1->0, then +1
 * 1011-1100-0000-0000-0000-0000-0000-0010 = -2.125
 * B    C     0    0    0    0    0    2 = answer
 * convert to base hex 
 * 1010 = 10 
 * 4 base 10 = 0100 base 2
 * 11 base 10 = ? base 2 1011
 * B9999AFE 
 * 1011-1001-1001-1001-1001-1010 = 1011-1001-1001-1001-1001-1001
 * inverted = .0100-0110-0110-0110-0110-0110
 * 1111-1110 = 1111-1101 -> inverted = 0000-0010 = 2^-2
 * .0100-0110-0110-0110-0110-0110 *2^-2
 * 0.0001-0001-1001-1001-1001-1001-1000
 * 0.1 1 9 9 9 9 8 base 16
 * base 10 = 1/16 + 1/(16^2) +9/(16^3) 
 * d
 * 46666601
 * 0100-0110-0110-0110-0110-0000-0001 2^1
 * 01.0001-1001-1001-1001-1000-0000-0100 2^1
 * 1. 
 * 
 * 46666602
 * 10.1011-0011-0011-0011-0000-0001-0000 2^2
 */   11    3    3    3    0    1    0